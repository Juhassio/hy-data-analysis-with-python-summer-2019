[{"name": "test.test_missing_value_types.MissingValueTypes.test_columns", "status": "failed", "message": "\nArrays are not equal\nIncorrect column names!\n(mismatch 100.0%)\n x: array(['President', 'Year of independence'], dtype=object)\n y: array(['Year of independence', 'President'], \n      dtype='<U20')", "passed": false, "points": ["p04-13.1"], "backtrace": ["  File \"/Users/juhassio/anaconda/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/Users/juhassio/anaconda/lib/python3.6/unittest/case.py\", line 601, in run\n    testMethod()\n", "  File \"/Users/juhassio/Desktop/hy-data-analysis-with-python-summer-2019/part04-e13_missing_value_types/test/test_missing_value_types.py\", line 32, in test_columns\n    err_msg=\"Incorrect column names!\")\n", "  File \"/Users/juhassio/anaconda/lib/python3.6/site-packages/numpy/testing/utils.py\", line 871, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n", "  File \"/Users/juhassio/anaconda/lib/python3.6/site-packages/numpy/testing/utils.py\", line 796, in assert_array_compare\n    raise AssertionError(msg)\n"]}, {"name": "test.test_missing_value_types.MissingValueTypes.test_dtypes", "status": "failed", "message": "dtype('O') != <class 'numpy.float64'> : Incorrect type in column 0!", "passed": false, "points": ["p04-13.1"], "backtrace": ["  File \"/Users/juhassio/anaconda/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/Users/juhassio/anaconda/lib/python3.6/unittest/case.py\", line 601, in run\n    testMethod()\n", "  File \"/Users/juhassio/Desktop/hy-data-analysis-with-python-summer-2019/part04-e13_missing_value_types/test/test_missing_value_types.py\", line 36, in test_dtypes\n    self.assertEqual(df.dtypes[0], np.float64, msg=\"Incorrect type in column 0!\")\n", "  File \"/Users/juhassio/anaconda/lib/python3.6/unittest/case.py\", line 821, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/Users/juhassio/anaconda/lib/python3.6/unittest/case.py\", line 814, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_missing_value_types.MissingValueTypes.test_index", "status": "passed", "message": "", "passed": true, "points": ["p04-13.1"], "backtrace": []}, {"name": "test.test_missing_value_types.MissingValueTypes.test_nan", "status": "failed", "message": "False is not true : Expected a null value in position 0, 0!", "passed": false, "points": ["p04-13.1"], "backtrace": ["  File \"/Users/juhassio/anaconda/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/Users/juhassio/anaconda/lib/python3.6/unittest/case.py\", line 601, in run\n    testMethod()\n", "  File \"/Users/juhassio/Desktop/hy-data-analysis-with-python-summer-2019/part04-e13_missing_value_types/test/test_missing_value_types.py\", line 42, in test_nan\n    self.assertTrue(m[0,0], msg=\"Expected a null value in position 0, 0!\")\n", "  File \"/Users/juhassio/anaconda/lib/python3.6/unittest/case.py\", line 678, in assertTrue\n    raise self.failureException(msg)\n"]}, {"name": "test.test_missing_value_types.MissingValueTypes.test_shape", "status": "passed", "message": "", "passed": true, "points": ["p04-13.1"], "backtrace": []}]